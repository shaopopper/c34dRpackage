library(c34d)
ls("c34d")
ls(c34d)
ls('package:c34d')
#查看R包的
mget(ls("package:c34d"), inherits = TRUE)
library(c34d)
mkdir <- function(xxx){
xxx <- as.vector(xxx)
#复制文件到同一文件夹
#获得路径，在后面加入/data
# dir.create('C:/Users/shao/Desktop/T2/data3') #创建一个目录
eval(parse(text = paste0("dir.create('",getwd(),"/",xxx,"')")))
print(getwd())
}
mkdir <- function(xxx){
xxx <- as.vector(xxx)
#复制文件到同一文件夹
#获得路径，在后面加入/data
# dir.create('C:/Users/shao/Desktop/T2/data3') #创建一个目录
eval(parse(text = paste0("dir.create('",getwd(),"/",xxx,"')")))
print(getwd())
}
mkdir(xxx)
mkdir('xxx')
setwd("C:/Users/shao/Desktop/NotePages/Rpackage/c34d")
remove.packages("c34d", lib="~/R/win-library/4.0")
library(devtools) #再次加载
library(roxygen2)
# 写入
document()
library(devtools) #再次加载
library(roxygen2)
# 写入
document()
library(devtools) #再次加载
library(roxygen2)
# 写入
document()
check()
#安装
remotes::install_github("shaopopper/c34dRpackage")
library(c34d)
#查看R包包含的函数名
ls('package:c34d')
c34d::
#查看R包的详细函数
mget(ls("package:c34d"), inherits = TRUE)
GetSecondaryDirectoryFile(1)
a=GetSecondaryDirectoryFile(1)
a
help(c34d)
help("c34d")
??c34d
#查看R包包含的函数名
ls('package:c34d')
remove.packages("c34d", lib="~/R/win-library/4.0")
library(devtools) #再次加载
library(roxygen2)
# 写入
document()
check()
#安装
remotes::install_github("shaopopper/c34dRpackage")
#安装
remotes::install_github("shaopopper/c34dRpackage")
#安装
remotes::install_github("shaopopper/c34dRpackage")
library(c34d)
#查看R包包含的函数名
ls('package:c34d')
#查看R包的详细函数
mget(ls("package:c34d"), inherits = TRUE)
GetSecondaryDirectoryFile(1)
a=GetSecondaryDirectoryFile(1)
a
GetSecondaryDirectoryFile <- function(xx){
xxx=xx
filename=1
for (i in 1:200) {
a=as.character(list.files(list.files()[i])[1])
ifelse( a%in% NA==TRUE, NA,'b')
b=paste(getwd(),"/",list.files()[i],"/",list.files(list.files()[i])[1],sep = "")
filename[[i]]=b
}
filename
filename <- as.data.frame(filename)
# 对200行数据进行过滤
filename2=apply(filename, 2,
function(x){gsub(pattern = ".*(NA).*",
replacement = "\\21",x) })
filename2 <- as.data.frame(filename2)
filename2 <- filename2[filename2$filename!=1,]
filename2  #这时候提取到试运行的10个文件的绝对路径
return(filename=filename2)
}
GetSecondaryDirectoryFile(2)
GetSecondaryDirectoryFile <- function(xx){
xxx=xx
filename=1
for (i in 1:200) {
a=as.character(list.files(list.files()[i])[1])
ifelse( a%in% NA==TRUE, NA,'b')
b=paste(getwd(),"/",list.files()[i],"/",list.files(list.files()[i])[1],sep = "")
filename[[i]]=b
}
filename
filename <- as.data.frame(filename)
# 对200行数据进行过滤
filename2=apply(filename, 2,
function(x){gsub(pattern = ".*(NA).*",
replacement = "\\21",x) })
filename2 <- as.data.frame(filename2)
filename2 <- filename2[filename2$filename!=1,]
filename2  #这时候提取到试运行的10个文件的绝对路径
return(filename2)
}
GetSecondaryDirectoryFile(2)
GetSecondaryDirectoryFile <- function(xx){
xxx=xx
filename=1
for (i in 1:200) {
a=as.character(list.files(list.files()[i])[1])
ifelse( a%in% NA==TRUE, NA,'b')
b=paste(getwd(),"/",list.files()[i],"/",list.files(list.files()[i])[1],sep = "")
filename[[i]]=b
}
filename
filename <- as.data.frame(filename)
# 对200行数据进行过滤
filename2=apply(filename, 2,
function(x){gsub(pattern = ".*(NA).*",
replacement = "\\21",x) })
filename2 <- as.data.frame(filename2)
filename2 <- filename2[filename2$filename!=1,]
return(filename2)
}
GetSecondaryDirectoryFile(2)
getwd()
library(devtools) #再次加载
library(roxygen2)
# 写入
document()
check()
#安装
remotes::install_github("shaopopper/c34dRpackage")
library(c34d)
#安装
remotes::install_github("shaopopper/c34dRpackage")
library(c34d)
#查看R包包含的函数名
ls('package:c34d')
#查看R包的详细函数
mget(ls("package:c34d"), inherits = TRUE)
#查看R包包含的函数名
ls('package:c34d')
#安装
remotes::install_github("shaopopper/c34dRpackage")
remove.packages("c34d", lib="~/R/win-library/4.0")
#安装
remotes::install_github("shaopopper/c34dRpackage")
#安装
remotes::install_github("shaopopper/c34dRpackage")
library(c34d)
#查看R包包含的函数名
ls('package:c34d')
#查看R包的详细函数
mget(ls("package:c34d"), inherits = TRUE)
a=GetSecondaryDirectoryFile(1)
data1=data.frame(
names1 = c('QWE',       'WUN', 'EJN', 'JDB',  'zsc' ),
logFC = c(3, -0.4, 5, 0.4, -3 ),
bmi = c('正常','正常','超重','肥胖','正常')
)
data2=data.frame(
names2 = c('QWE','TYE', 'WUN', 'EJN', 'JDB'          ),
gender = c(1, 2, 1, 2, 1),    #1=男 2=女
bmi = c('正常','低体重','正常','超重','肥胖')
)
full_join(data1,data2,by = NULL,copy = FALSE,
suffix = c("name1", "names2"),
...,
keep = FALSE
)
dplyr::full_join()
ls(dplyr::full_join)
mget(ls("package:dplyr::full_join"), inherits = TRUE)
mget(ls("package:dplyr"), inherits = TRUE)
library(dplyr)
mget(ls("package:dplyr"), inherits = TRUE)
ls('package:dplyr')
methods(full_join())
methods(full_join
methods(full_join)
methods(full_join)
?methods(full_join)
methods(dplyr::full_join)
methods(dplyr::full_join.data.frame)
methods(full_join.data.frame)
methods(full_join)
methods(full_join)[1]
methods(full_join)
full_join.data.frame
??full_join.data.frame
UseMethod("full_join")
UseMethod("mean")
methods(mean)
methods(mean.default)
mean.default()
mean.default
methods(full_join)
mean.default
full_join
getAnywhere(full_join)
UseMethod("full_join")
describeBy<-source("GroupStatistics.R")
describeBy<-source("GroupStatistics.R")
View(describeBy)
View(describe)
View(describe_by)
describeBy<-source("GroupStatistics.R")
library(devtools) #再次加载
library(roxygen2)
# 将数据写入mypackage 中
use_data(describeBy,overwrite = TRUE)
use_data_raw()
library(devtools) #再次加载
library(roxygen2)
source("data/describeBy.rda")
source("data/describeBy.rda")
load("C:/Users/shao/Desktop/NotePages/Rpackage/c34d/data/describeBy.rda")
GroupingStat <- function(xx){
xxx=xx
load("data/describeBy.rda")
}
View(GroupingStat)
GroupingStat <- function(xx){
xxx=xx
load("data/describeBy.rda")
}
View(GroupingStat)
GroupingStat(1)
a=GroupingStat(1)
View(GroupingStat)
GroupingStat <- function(xx){
xxx=xx
return(load("data/describeBy.rda"))
}
GroupingStat(1)
View(GroupingStat)
GroupingStat(23)
GroupingStat <- function(xx){
xxx=xx
load("data/describeBy.rda")
}
GroupingStat(23)
GroupingStat <- function(xx){
xxx=xx
load("data/describeBy.rda")
}
GroupingStat(23)
View(GroupingStat)
load("C:/Users/shao/Desktop/NotePages/Rpackage/c34d/data/describeBy.rda")
describe_by<-function(y,na.omit=TRUE){
function(x,na.omit=TRUE){   #na.omit=TRUE不忽略缺失指
if (na.omit)
Miss<-sum(is.na(x)==TRUE)   #统计缺失值
x<-x[!is.na(x)]  #去掉缺失值
m<-mean(x)
n<-length(x)  #不是缺失值的个数
s<-sd(x)
skew<-sum((x-m)^3/s^3)/n
kurt<-sum((x-m)^4/s^4)/n-3
#Normal_ks=ks.test(x,"pnorm")[["p.value"]]
Noraml_sh=shapiro.test(x)[["p.value"]]
describe=round(c(n=n,Miss=Miss,mean=m,stdev=s,
skew=skew,kurtosis=kurt,
#Normal_ks=Normal_ks
Noraml_sh=Noraml_sh),3)
sapply(y,describe,na.omit=TRUE)
}
}
# funtion第二种
myvars <- c('Sepal.Length','Sepal.Width')
by(iris[myvars],
list(wuzhong=iris$Species ),#可以加多个分组
FUN=describe_by)
describe_by<-function(y,na.omit=TRUE){
describe=function(x,na.omit=TRUE){   #na.omit=TRUE不忽略缺失指
if (na.omit)
Miss<-sum(is.na(x)==TRUE)   #统计缺失值
x<-x[!is.na(x)]  #去掉缺失值
m<-mean(x)
n<-length(x)  #不是缺失值的个数
s<-sd(x)
skew<-sum((x-m)^3/s^3)/n
kurt<-sum((x-m)^4/s^4)/n-3
#Normal_ks=ks.test(x,"pnorm")[["p.value"]]
Noraml_sh=shapiro.test(x)[["p.value"]]
return(round(c(n=n,Miss=Miss,mean=m,stdev=s,
skew=skew,kurtosis=kurt,
#Normal_ks=Normal_ks
Noraml_sh=Noraml_sh),3))
sapply(y,describe,na.omit=TRUE)
}
}
# funtion第二种
myvars <- c('Sepal.Length','Sepal.Width')
by(iris[myvars],
list(wuzhong=iris$Species ),#可以加多个分组
FUN=describe_by)
describe_by<-function(y,na.omit=TRUE){
describe=function(x,na.omit=TRUE){   #na.omit=TRUE不忽略缺失指
if (na.omit)
Miss<-sum(is.na(x)==TRUE)   #统计缺失值
x<-x[!is.na(x)]  #去掉缺失值
m<-mean(x)
n<-length(x)  #不是缺失值的个数
s<-sd(x)
skew<-sum((x-m)^3/s^3)/n
kurt<-sum((x-m)^4/s^4)/n-3
#Normal_ks=ks.test(x,"pnorm")[["p.value"]]
Noraml_sh=shapiro.test(x)[["p.value"]]
return(round(c(n=n,Miss=Miss,mean=m,stdev=s,
skew=skew,kurtosis=kurt,
#Normal_ks=Normal_ks
Noraml_sh=Noraml_sh),3))}
sapply(y,describe,na.omit=TRUE)
}
# funtion第二种
myvars <- c('Sepal.Length','Sepal.Width')
by(iris[myvars],
list(wuzhong=iris$Species ),#可以加多个分组
FUN=describe_by)
library(devtools) #再次加载
library(roxygen2)
# 写入
document()
# 写入
document()
# 写入
document()
# 写入
document()
check()
remove.packages("c34d", lib="~/R/win-library/4.0")
#安装
remotes::install_github("shaopopper/c34dRpackage")
#安装
remotes::install_github("shaopopper/c34dRpackage")
library(c34d)
#查看R包包含的函数名
ls('package:c34d')
#查看R包的详细函数
mget(ls("package:c34d"), inherits = TRUE)
aggregate(x=iris$Sepal.Length,by=iris$Species,fun=c34d::describe_by)
aggregate(x=iris$Sepal.Length,by=iris$Species,c34d::describe_by)
aggregate(
x = list(Q = iris$Sepal.Length,
Q2= iris$Sepal.Width),
by = list(group = iris$Species),
FUN = describe_by,
)
aggregate(x = list(Q = iris$Sepal.Length),
by = list(group = iris$Species),
FUN = describe_by,
)
aggregate(x = list(Q = iris$Sepal.Length),
by = list(group = iris$Species),
FUN = describe_by,
)
iris
data(iris)
force(iris)
aggregate(x = list(Q = iris$Sepal.Width),
by = list(group = iris$Species),
FUN = describe_by,
)
aggregate(x = iris$Sepal.Width),
by = iris$Species,
FUN = describe_by,
)
aggregate(x = iris$Sepal.Width,
by = iris$Species,
FUN = describe_by,
)
aggregate(iris$Sepal.Width,
by = list(group = iris$Species),
FUN = describe_by,
)
iris$Sepal.Width
by(iris[,c('Sepal.Length','Sepal.Width')],iris$Species,describe_by)
aggregate(iris$Sepal.Length,
by = list(group = iris$Species),
FUN = describe_by,
)
tapply(iris$Sepal.Length,iris$Species,describe_by)
tapply(iris$Species,iris$Sepal.Length,describe_by)
tapply(iris$Sepal.Length,iris$Species,describe_by)
tapply(iris$Sepal.Length,iris$Species,shapiro.test)
tapply(iris$Sepal.Length,iris$Species,describe_by)
by(iris[,c('Sepal.Length','Sepal.Width')],iris$Species,describe_by)
tapply(iris$Sepal.Length,iris$Species,describe_by)
remotes::install_github("shaopopper/c34dRpackage")
data <- read_excel("", sheet = "Sheet1", col_names = TRUE)
getwd(/)
getwd('/')
'clipboard'
call(":", 1, 10)
data(iris)
subset(iris,iris$Sepal.Length>3,select = (2))
a=subset(iris,iris$Sepal.Length>3,select = (2))
View(a)
View(iris)
options()
unclass(iris)
unclass(iris)[1]
unclass(iris)[5]
a=unclass(iris)[5]
a
View(a)
a[["Species"]]
attributes(iris)
a[2]=unclass(iris)[2]
View(a)
sapply(a,mean)
View(a)
a[1]=unclass(iris)[1]
View(a)
sapply(a,mean)
View(a)
sapply(a,[[1]])
sapply(a,sd)
iris[1][2]
View(a)
iris[[1]][2]
sapply(a,[[1]][2])
colourpicker:::plotHelperAddin()
styler:::set_style_transformers()
styler:::style_active_file()
styler:::style_active_file()
styler:::style_active_file()
questionr:::irec()
rhandsontable:::editAddin()
ggThemeAssist:::ggThemeAssistAddin()
source("~/.active-rstudio-document")
dir()
getwd()
setwd("~/")
getwd()
getwd()
gtffinal <- read.csv("TCGA.R")  #先读取
getwd()
gtffinal <- read.csv("gtffinal.csv")  #先读取
gtffinal <- read.csv("gtffinal.csv")  #先读取
use_data(gtffinal,overwrite = TRUE)
library(devtools) #再次加载  #R文件夹下 如果修改直接这里再开始
library(roxygen2)
use_data(gtffinal,overwrite = TRUE)
use_data_raw()
load("C:/Users/shao/Desktop/NotePages/00 Rpackage/c34d/data/gtffinal.rda")
load("C:/Users/shao/Desktop/NotePages/00 Rpackage/c34d/data/gtffinal.rda")
library(devtools)
library(roxygen2)
getwd()
# 写入
document()
library(devtools)
library(roxygen2)
# 写入
document()
# 检查
check()
remotes::install_github("shaopopper/c34dRpackage")
#' finddata
#'
#' 查找数据框某字符所在的位置
#'
#' @param A1 输入要查找的数据名字
#' @param A2 输入要查找的字符
#'
#' @return position
#' @export
#'
finddata=function(A1,A2){
eval(parse(text = paste0('data2=as.matrix(',A1,'==',A2)))
eval(parse(text = paste0('position=as.vector(which(data2==TRUE,arr.ind=TRUE))')))
return(position)
}
#' finddata
#'
#' 查找数据框某字符所在的位置
#'
#' @param A1 输入要查找的数据名字
#' @param A2 输入要查找的字符
#'
#' @return position
#' @export
#'
finddata=function(A1,A2){
eval(parse(text = paste0('data2=as.matrix(',A1,'==',A2)))
eval(parse(text = paste0('position=as.vector(which(data2==TRUE,arr.ind=TRUE))')))
return(position)
}
finddata("da","123456")
#在R文件夹下面 写function 然后 Ctrl+Shift+Alt+R
library(devtools) #再次加载  #R文件夹下 如果修改直接这里再开始
library(roxygen2)
# 写入
document()
# 检查
check()
